{"version":3,"sources":["context.js","reducer.js","components/topics.js","components/chat.js","components/dashboad.js","App.js","index.js"],"names":["socket","reducer","state","action","type","textField","payload","chats","topic","from","msg","activeTopic","AppContext","createContext","initialState","process","PORT","Topic1","Topic2","AppProvider","children","user","Math","random","toFixed","useReducer","dispatch","topics","Object","keys","useEffect","removeAllListeners","on","message","io","transports","Provider","value","handleChange","e","target","handleActiveTopic","innerText","sendMessage","emit","emptyInput","GlobalContext","useContext","Topics","classes","useStyles","className","List","map","ListItem","button","onClick","topicbutton","ListItemText","primary","Chat","chat","i","flex2","Chip","label","chip","Typography","component","makeStyles","theme","root","padding","spacing","backgroundColor","flex","display","alignItems","justifyContent","margin","width","height","borderRadius","flexDirection","input","color","fontWeight","marginBottom","topicchange","Dashboad","Paper","Box","mb","variant","style","mt","textAlign","TextField","id","required","onChange","onKeyPress","key","Button","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1615d317.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from \"react\";\r\nimport reducer from \"./reducer\";\r\nimport io from \"socket.io-client\";\r\nconst AppContext = createContext();\r\nconst PORT = process.env.PORT || 3001;\r\n\r\nconst initialState = {\r\n  textField: \"\",\r\n  chats: {\r\n    Topic1: [],\r\n    Topic2: [],\r\n  },\r\n  activeTopic: \"\",\r\n};\r\nlet socket;\r\nexport const AppProvider = ({ children }) => {\r\n  const user = \"f**k\" + Math.random(100).toFixed(2) * 100;\r\n  const sendMessage = (message) => {\r\n    socket.emit(\"chat message\", message);\r\n    socket.removeAllListeners(\"chat message\");\r\n    socket.on(\"chat message\", function (message) {\r\n      dispatch({\r\n        type: \"RECEIVE_MSG\",\r\n        payload: { ...message },\r\n      });\r\n    });\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const topics = Object.keys(state.chats);\r\n  useEffect(() => {\r\n    dispatch({ type: \"ACTIVE_TOPIC_CHANGE\", payload: topics[0] });\r\n    if (socket) {\r\n      socket.removeAllListeners(\"chat message\");\r\n      socket.on(\"chat message\", function (message) {\r\n        dispatch({\r\n          type: \"RECEIVE_MSG\",\r\n          payload: { ...message },\r\n        });\r\n      });\r\n    }\r\n  }, []);\r\n  if (!socket) {\r\n    socket = io(\"/\", {\r\n      transports: [\"websocket\", \"polling\", \"flashsocket\"],\r\n    });\r\n  }\r\n  const handleChange = (e) => {\r\n    dispatch({ type: \"HANLDE_INPUT\", payload: e.target.value });\r\n  };\r\n  const emptyInput = () => {\r\n    dispatch({ type: \"HANLDE_INPUT\", payload: \"\" });\r\n  };\r\n\r\n  const handleActiveTopic = (e) => {\r\n    dispatch({ type: \"ACTIVE_TOPIC_CHANGE\", payload: e.target.innerText });\r\n  };\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        ...state,\r\n        handleChange,\r\n        handleActiveTopic,\r\n        sendMessage,\r\n        emptyInput,\r\n        user,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport function GlobalContext() {\r\n  return useContext(AppContext);\r\n}\r\n","const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"HANLDE_INPUT\":\r\n      return {\r\n        ...state,\r\n        textField: action.payload,\r\n      };\r\n    case \"RECEIVE_MSG\":\r\n      return {\r\n        ...state,\r\n        chats: {\r\n          ...state.chats,\r\n          [action.payload.topic]: [\r\n            ...state.chats[action.payload.topic],\r\n            {\r\n              from: action.payload.from,\r\n              msg: action.payload.msg,\r\n            },\r\n          ],\r\n        },\r\n      };\r\n    case \"ACTIVE_TOPIC_CHANGE\":\r\n      return { ...state, activeTopic: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useStyles } from \"./dashboad\";\r\nimport { GlobalContext } from \"../context\";\r\nconst Topics = () => {\r\n  const { chats, handleActiveTopic } = GlobalContext();\r\n  const topics = Object.keys(chats);\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.topics}>\r\n      <List>\r\n        {topics.map((topic) => (\r\n          <ListItem\r\n            button\r\n            key={topic}\r\n            onClick={handleActiveTopic}\r\n            className={classes.topicbutton}\r\n          >\r\n            <ListItemText primary={topic} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Topics;\r\n","import React from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useStyles } from \"./dashboad\";\r\nimport { GlobalContext } from \"../context\";\r\n\r\nconst Chat = () => {\r\n  const classes = useStyles();\r\n  const { chats, activeTopic } = GlobalContext();\r\n  if (activeTopic) {\r\n    return (\r\n      <div className={classes.chat}>\r\n        {chats[activeTopic].map((chat, i) => (\r\n          <div className={classes.flex2} key={i}>\r\n            <Chip label={chat.from} className={classes.chip} />\r\n            <Typography component=\"p\">{chat.msg}</Typography>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  return <div>Loading</div>;\r\n};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Topics from \"./topics\";\r\nimport Chat from \"./chat\";\r\nimport { GlobalContext } from \"../context\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n    backgroundColor: \"#000000\",\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    \"& > *\": { margin: \"0px 8px 0px 0px\" },\r\n  },\r\n  flex2: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  topics: {\r\n    width: \"20%\",\r\n    height: \"400px\",\r\n    backgroundColor: \"#F47806\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  chat: {\r\n    width: \"80%\",\r\n    height: \"360px\",\r\n    padding: \"20px\",\r\n    backgroundColor: \"#FC9B40\",\r\n    borderRadius: \"20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  input: {\r\n    width: \"65%\",\r\n    backgroundColor: \"#FC9B40\",\r\n    color: \"#000000\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  button: {\r\n    width: \"15%\",\r\n    padding: \"15px 15px\",\r\n    color: \"#000000\",\r\n    backgroundColor: \"#F47806\",\r\n    borderRadius: \"20px\",\r\n    fontWeight: \"700\",\r\n  },\r\n  topicbutton: {\r\n    marginBottom: \"5px\",\r\n    \"&:hover\": { backgroundColor: \"#3E50B4\", color: \"white\" },\r\n  },\r\n  topicchange: { width: \"20%\", color: \"white!important\" },\r\n}));\r\nexport default function Dashboad() {\r\n  const {\r\n    textField,\r\n    handleChange,\r\n    activeTopic,\r\n    sendMessage,\r\n    emptyInput,\r\n    user,\r\n  } = GlobalContext();\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Box mb={2}>\r\n          <Typography variant=\"h4\" component=\"h5\">\r\n            <Box className={classes.topicchange}>\r\n              Kama<span style={{ color: \"#F47806\" }}>kazi</span>\r\n            </Box>\r\n          </Typography>\r\n        </Box>\r\n        <div className={classes.flex}>\r\n          <Topics />\r\n          <Chat />\r\n        </div>\r\n        <Box mt={3}>\r\n          <div className={classes.flex}>\r\n            <Typography\r\n              className={classes.topicchange}\r\n              variant=\"h5\"\r\n              component=\"h6\"\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              <Box>{activeTopic}</Box>\r\n            </Typography>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              variant=\"outlined\"\r\n              label=\"Send a message\"\r\n              className={classes.input}\r\n              value={textField}\r\n              required={true}\r\n              onChange={handleChange}\r\n              onKeyPress={(e) => {\r\n                if (textField) {\r\n                  if (e.key === \"Enter\") {\r\n                    sendMessage({\r\n                      from: user,\r\n                      msg: textField,\r\n                      topic: activeTopic,\r\n                    });\r\n                    emptyInput();\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              onClick={() => {\r\n                if (textField) {\r\n                  sendMessage({\r\n                    from: user,\r\n                    msg: textField,\r\n                    topic: activeTopic,\r\n                  });\r\n                  emptyInput();\r\n                }\r\n              }}\r\n            >\r\n              Send\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Dashboard from \"./components/dashboad\";\n\nfunction App() {\n  return (\n    <div style={{ backgroundColor: \"#000000\", height: \"100vh\" }}>\n      <div>\n        <Dashboard />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}