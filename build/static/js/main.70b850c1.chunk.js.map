{"version":3,"sources":["context.js","reducer.js","components/topics.js","components/chat.js","components/dashboad.js","components/Personalchat/nameinput.js","components/Personalchat/friendslist.js","App.js","index.js"],"names":["socket","reducer","state","action","type","textField","payload","chats","topic","from","msg","activeTopic","AppContext","createContext","PORT","process","initialState","Topic1","Topic2","AppProvider","children","user","Math","random","toString","substr","useReducer","dispatch","topics","Object","keys","useEffect","removeAllListeners","on","message","io","String","transports","Provider","value","handleChange","e","target","handleActiveTopic","innerText","sendMessage","emit","emptyInput","GlobalContext","useContext","Topics","classes","useStyles","className","List","map","ListItem","button","onClick","topicbutton","ListItemText","primary","Chat","divRef","useRef","current","scrollIntoView","behavior","chat","style","height","overflowY","overflowX","width","boxSizing","paddingRight","i","string","str","brokenString","count","length","breakString","flex2","Chip","label","chip","Typography","component","ref","makeStyles","theme","root","padding","spacing","backgroundColor","flex","display","alignItems","justifyContent","margin","marginRight","marginTop","borderRadius","flexDirection","overflow","input","color","fontWeight","marginBottom","topicchange","Dashboad","Paper","Box","mb","variant","mt","textAlign","TextField","id","required","onChange","onKeyPress","key","Button","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70b850c1.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from \"react\";\r\nimport reducer from \"./reducer\";\r\nimport io from \"socket.io-client\";\r\nconst AppContext = createContext();\r\nconst PORT = process.env.PORT || 3001;\r\n\r\nconst initialState = {\r\n  textField: \"\",\r\n  chats: {\r\n    Topic1: [],\r\n    Topic2: [],\r\n  },\r\n  activeTopic: \"\",\r\n};\r\nlet socket;\r\nexport const AppProvider = ({ children }) => {\r\n  const user = \"_\" + Math.random().toString(36).substr(2, 9);\r\n  const sendMessage = (message) => {\r\n    socket.emit(\"chat message\", message);\r\n    socket.removeAllListeners(\"chat message\");\r\n    socket.on(\"chat message\", function (message) {\r\n      dispatch({\r\n        type: \"RECEIVE_MSG\",\r\n        payload: { ...message },\r\n      });\r\n    });\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const topics = Object.keys(state.chats);\r\n  useEffect(() => {\r\n    dispatch({ type: \"ACTIVE_TOPIC_CHANGE\", payload: topics[0] });\r\n    if (socket) {\r\n      socket.removeAllListeners(\"chat message\");\r\n      socket.on(\"chat message\", function (message) {\r\n        dispatch({\r\n          type: \"RECEIVE_MSG\",\r\n          payload: { ...message },\r\n        });\r\n      });\r\n    }\r\n  }, []);\r\n  if (!socket) {\r\n    socket = io(\":\" + String(PORT), {\r\n      transports: [\"websocket\", \"polling\", \"flashsocket\"],\r\n    });\r\n  }\r\n  const handleChange = (e) => {\r\n    dispatch({ type: \"HANLDE_INPUT\", payload: e.target.value });\r\n  };\r\n  const emptyInput = () => {\r\n    dispatch({ type: \"HANLDE_INPUT\", payload: \"\" });\r\n  };\r\n\r\n  const handleActiveTopic = (e) => {\r\n    dispatch({ type: \"ACTIVE_TOPIC_CHANGE\", payload: e.target.innerText });\r\n  };\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        ...state,\r\n        handleChange,\r\n        handleActiveTopic,\r\n        sendMessage,\r\n        emptyInput,\r\n        user,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport function GlobalContext() {\r\n  return useContext(AppContext);\r\n}\r\n","const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"HANLDE_INPUT\":\r\n      return {\r\n        ...state,\r\n        textField: action.payload,\r\n      };\r\n    case \"RECEIVE_MSG\":\r\n      return {\r\n        ...state,\r\n        chats: {\r\n          ...state.chats,\r\n          [action.payload.topic]: [\r\n            ...state.chats[action.payload.topic],\r\n            {\r\n              from: action.payload.from,\r\n              msg: action.payload.msg,\r\n            },\r\n          ],\r\n        },\r\n      };\r\n    case \"ACTIVE_TOPIC_CHANGE\":\r\n      return { ...state, activeTopic: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useStyles } from \"./dashboad\";\r\nimport { GlobalContext } from \"../context\";\r\nconst Topics = () => {\r\n  const { chats, handleActiveTopic } = GlobalContext();\r\n  const topics = Object.keys(chats);\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.topics}>\r\n      <List>\r\n        {topics.map((topic) => (\r\n          <ListItem\r\n            button\r\n            key={topic}\r\n            onClick={handleActiveTopic}\r\n            className={classes.topicbutton}\r\n          >\r\n            <ListItemText primary={topic} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Topics;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useStyles } from \"./dashboad\";\r\nimport { GlobalContext } from \"../context\";\r\n\r\nconst Chat = () => {\r\n  const divRef = useRef(null);\r\n  useEffect(() => {\r\n    divRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  });\r\n  const breakString = (str) => {\r\n    let brokenString = \"\";\r\n    const limit = 30;\r\n    for (let i = 0, count = 0; i < str.length; i++) {\r\n      if (str[i] === \" \") {\r\n        count = 0;\r\n      }\r\n      if (count >= limit) {\r\n        brokenString += str[i];\r\n        brokenString += \"\\n\";\r\n        count = 0;\r\n      } else {\r\n        count++;\r\n        brokenString += str[i];\r\n      }\r\n    }\r\n    return brokenString;\r\n  };\r\n  const classes = useStyles();\r\n  const { chats, activeTopic } = GlobalContext();\r\n  if (activeTopic) {\r\n    return (\r\n      <div className={classes.chat}>\r\n        <div\r\n          style={{\r\n            height: \"auto\",\r\n            overflowY: \"scroll\",\r\n            overflowX: \"hidden!important\",\r\n            width: \"100%\",\r\n            boxSizing: \"content-box\",\r\n            paddingRight: \"50px\",\r\n          }}\r\n        >\r\n          {chats[activeTopic].map((chat, i) => {\r\n            let string = breakString(chat.msg, 5);\r\n            return (\r\n              <div className={classes.flex2} key={i}>\r\n                <Chip label={chat.from} className={classes.chip} />\r\n                <Typography component=\"p\">{string}</Typography>\r\n                <div ref={divRef} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <div>Loading</div>;\r\n};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Topics from \"./topics\";\r\nimport Chat from \"./chat\";\r\nimport { GlobalContext } from \"../context\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n    backgroundColor: \"#000000\",\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    \"& > *\": { margin: \"0px 8px 0px 0px\" },\r\n  },\r\n  flex2: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"95%\",\r\n    height: \"auto\",\r\n    \"& > *\": { marginRight: \"5px\", marginTop: \"3px\" },\r\n  },\r\n  topics: {\r\n    width: \"20%\",\r\n    height: \"400px\",\r\n    backgroundColor: \"#F47806\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  chat: {\r\n    width: \"80%\",\r\n    height: \"360px\",\r\n    padding: \"20px\",\r\n    backgroundColor: \"#FC9B40\",\r\n    borderRadius: \"20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-end\",\r\n    overflow: \"hidden\",\r\n  },\r\n  input: {\r\n    width: \"65%\",\r\n    backgroundColor: \"#FC9B40\",\r\n    color: \"#000000\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  button: {\r\n    width: \"15%\",\r\n    padding: \"15px 15px\",\r\n    color: \"#000000\",\r\n    backgroundColor: \"#F47806\",\r\n    borderRadius: \"20px\",\r\n    fontWeight: \"700\",\r\n  },\r\n  topicbutton: {\r\n    marginBottom: \"5px\",\r\n    \"&:hover\": { backgroundColor: \"#FC9B40\", color: \"white\" },\r\n  },\r\n  topicchange: { width: \"20%\", color: \"white!important\" },\r\n  chip: { backgroundColor: \"#F50056\", color: \"#000000\" },\r\n}));\r\nexport default function Dashboad() {\r\n  const {\r\n    textField,\r\n    handleChange,\r\n    activeTopic,\r\n    sendMessage,\r\n    emptyInput,\r\n    user,\r\n  } = GlobalContext();\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Box mb={2}>\r\n          <Typography variant=\"h4\" component=\"h5\">\r\n            <Box className={classes.topicchange}>\r\n              Kama<span style={{ color: \"#F47806\" }}>kazi</span>\r\n            </Box>\r\n          </Typography>\r\n        </Box>\r\n        <div className={classes.flex}>\r\n          <Topics />\r\n          <Chat />\r\n        </div>\r\n        <Box mt={1}>\r\n          <div className={classes.flex}>\r\n            <Typography\r\n              className={classes.topicchange}\r\n              variant=\"h5\"\r\n              component=\"h6\"\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              <Box>{activeTopic}</Box>\r\n            </Typography>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              variant=\"outlined\"\r\n              label=\"Send a message\"\r\n              className={classes.input}\r\n              value={textField}\r\n              required={true}\r\n              onChange={handleChange}\r\n              onKeyPress={(e) => {\r\n                if (textField) {\r\n                  if (e.key === \"Enter\") {\r\n                    sendMessage({\r\n                      from: user,\r\n                      msg: textField,\r\n                      topic: activeTopic,\r\n                    });\r\n                    emptyInput();\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              onClick={() => {\r\n                if (textField) {\r\n                  sendMessage({\r\n                    from: user,\r\n                    msg: textField,\r\n                    topic: activeTopic,\r\n                  });\r\n                  emptyInput();\r\n                }\r\n              }}\r\n            >\r\n              Send\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Chatcontext } from \"./chatcontext\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Input() {\r\n  const classes = useStyles();\r\n  const { nickName, handleNickName } = Chatcontext();\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      height=\"90vh\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        flexWrap=\"wrap\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        width=\"70%\"\r\n      >\r\n        <TextField\r\n          onChange={handleNickName}\r\n          margin=\"dense\"\r\n          value={nickName}\r\n          placeholder=\"Enter your name\"\r\n          size=\"medium\"\r\n          color=\"secondary\"\r\n          style={{ width: \"80%\" }}\r\n          required\r\n        />\r\n        <Link to=\"/chats\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"large\"\r\n            className={classes.root}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Link>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Chatcontext } from \"./chatcontext\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  useHistory,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function FriendList() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { nickName } = Chatcontext();\r\n  useEffect(() => {\r\n    if (!nickName) {\r\n      history.goBack();\r\n    }\r\n  });\r\n  return <div>hello FriendList component</div>;\r\n}\r\n","import \"./App.css\";\nimport Dashboard from \"./components/dashboad\";\nimport Chatapp from \"./components/Personalchat/app\";\n\nfunction App() {\n  return (\n    <div>\n      <div\n        style={{\n          backgroundColor: \"#000000\",\n          height: \"100vh\",\n        }}\n      >\n        <Dashboard />\n      </div>\n      {/* <div>\n        <Chatapp />\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}