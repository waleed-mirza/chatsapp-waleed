{"version":3,"sources":["context.js","reducer.js","components/topics.js","components/chat.js","components/dashboad.js","App.js","index.js"],"names":["socket","reducer","state","action","type","textField","payload","chats","topic","from","msg","activeTopic","AppContext","createContext","initialState","process","PORT","Topic1","Topic2","AppProvider","children","user","Math","random","toFixed","useReducer","dispatch","topics","Object","keys","useEffect","io","transports","Provider","value","handleChange","e","target","handleActiveTopic","innerText","sendMessage","message","emit","removeAllListeners","on","emptyInput","GlobalContext","useContext","Topics","classes","useStyles","className","List","map","ListItem","button","onClick","ListItemText","primary","Chat","chat","i","flex","Chip","label","chip","Typography","component","makeStyles","theme","root","padding","spacing","margin","display","alignItems","width","height","borderRight","input","Dashboad","Paper","variant","style","textAlign","TextField","id","onChange","Button","color","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e67828f3.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from \"react\";\r\nimport reducer from \"./reducer\";\r\nimport io from \"socket.io-client\";\r\nconst AppContext = createContext();\r\nconst PORT = process.env.PORT || 3001;\r\n\r\nconst initialState = {\r\n  textField: \"\",\r\n  chats: {\r\n    Topic1: [],\r\n    Topic2: [],\r\n  },\r\n  activeTopic: \"\",\r\n};\r\nlet socket;\r\nexport const AppProvider = ({ children }) => {\r\n  const user = \"f**k\" + Math.random(100).toFixed(2) * 100;\r\n  const sendMessage = (message) => {\r\n    socket.emit(\"chat message\", message);\r\n    socket.removeAllListeners(\"chat message\");\r\n    socket.on(\"chat message\", function (message) {\r\n      dispatch({\r\n        type: \"RECEIVE_MSG\",\r\n        payload: { ...message },\r\n      });\r\n    });\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const topics = Object.keys(state.chats);\r\n  useEffect(() => {\r\n    dispatch({ type: \"ACTIVE_TOPIC_CHANGE\", payload: topics[0] });\r\n  }, []);\r\n  if (!socket) {\r\n    socket = io(\"/\", {\r\n      transports: [\"websocket\", \"polling\", \"flashsocket\"],\r\n    });\r\n  }\r\n  const handleChange = (e) => {\r\n    dispatch({ type: \"HANLDE_INPUT\", payload: e.target.value });\r\n  };\r\n  const emptyInput = () => {\r\n    dispatch({ type: \"HANLDE_INPUT\", payload: \"\" });\r\n  };\r\n\r\n  const handleActiveTopic = (e) => {\r\n    dispatch({ type: \"ACTIVE_TOPIC_CHANGE\", payload: e.target.innerText });\r\n  };\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        ...state,\r\n        handleChange,\r\n        handleActiveTopic,\r\n        sendMessage,\r\n        emptyInput,\r\n        user,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport function GlobalContext() {\r\n  return useContext(AppContext);\r\n}\r\n","const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"HANLDE_INPUT\":\r\n      return {\r\n        ...state,\r\n        textField: action.payload,\r\n      };\r\n    case \"RECEIVE_MSG\":\r\n      return {\r\n        ...state,\r\n        chats: {\r\n          ...state.chats,\r\n          [action.payload.topic]: [\r\n            ...state.chats[action.payload.topic],\r\n            {\r\n              from: action.payload.from,\r\n              msg: action.payload.msg,\r\n            },\r\n          ],\r\n        },\r\n      };\r\n    case \"ACTIVE_TOPIC_CHANGE\":\r\n      return { ...state, activeTopic: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useStyles } from \"./dashboad\";\r\nimport { GlobalContext } from \"../context\";\r\nconst Topics = () => {\r\n  const { chats, handleActiveTopic } = GlobalContext();\r\n  const topics = Object.keys(chats);\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.topics}>\r\n      <List>\r\n        {topics.map((topic) => (\r\n          <ListItem button key={topic} onClick={handleActiveTopic}>\r\n            <ListItemText primary={topic} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Topics;\r\n","import React from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useStyles } from \"./dashboad\";\r\nimport { GlobalContext } from \"../context\";\r\n\r\nconst Chat = () => {\r\n  const classes = useStyles();\r\n  const { chats, activeTopic } = GlobalContext();\r\n  if (activeTopic) {\r\n    return (\r\n      <div className={classes.chat}>\r\n        {chats[activeTopic].map((chat, i) => (\r\n          <div className={classes.flex} key={i}>\r\n            <Chip label={chat.from} className={classes.chip} />\r\n            <Typography component=\"p\">{chat.msg}</Typography>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  return <div>Loading</div>;\r\n};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Topics from \"./topics\";\r\nimport Chat from \"./chat\";\r\nimport { GlobalContext } from \"../context\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: { padding: theme.spacing(3, 2), margin: \"20px\" },\r\n  flex: { display: \"flex\", alignItems: \"center\" },\r\n  topics: { width: \"30%\", height: \"400px\", borderRight: \"2px solid #ccc\" },\r\n  chat: { width: \"70%\", height: \"400px\", padding: \"20px\" },\r\n  input: { width: \"85%\" },\r\n  button: { width: \"15%\" },\r\n}));\r\nexport default function Dashboad() {\r\n  const {\r\n    textField,\r\n    handleChange,\r\n    activeTopic,\r\n    sendMessage,\r\n    emptyInput,\r\n    user,\r\n  } = GlobalContext();\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h4\" component=\"h5\" style={{ textAlign: \"center\" }}>\r\n          Chats\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h6\" style={{ textAlign: \"center\" }}>\r\n          {activeTopic}\r\n        </Typography>\r\n        <div className={classes.flex}>\r\n          <Topics />\r\n          <Chat />\r\n        </div>\r\n        <div className={classes.flex}>\r\n          <TextField\r\n            id=\"standard-name\"\r\n            label=\"Send a Message\"\r\n            className={classes.input}\r\n            value={textField}\r\n            onChange={handleChange}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => {\r\n              sendMessage({ from: user, msg: textField, topic: activeTopic });\r\n              emptyInput();\r\n            }}\r\n          >\r\n            Send\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Dashboard from \"./components/dashboad\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}